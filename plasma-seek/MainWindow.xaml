<Window x:Class="plasma_seek.voidSTheMusic"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:plasma_seek"
        xmlns:dateConvertor="clr-namespace:plasma_seek.DateConvertor"
        xmlns:PersionalClass="clr-namespace:plasma_seek.PersionalClass"
        mc:Ignorable="d"
        Height="450" Width="800" 
        ResizeMode="CanResize"
        x:Name="myWin"
        FontFamily="Comic Sans MS,console,黑体" >

    <Window.Resources>
        <!--滚动条的模板-->

        <ControlTemplate x:Key="myScrollBar" TargetType="ScrollBar" >
            <ControlTemplate.Resources>
                <Style x:Key="repeatButtontyle" TargetType="RepeatButton">
                    <Setter Property="Width" Value="10"/>
                    <Setter Property="Height" Value="10"/>
                    <Setter Property="Foreground" Value="#e42c64"/>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate
                                TargetType="RepeatButton">
                                <Border
                                    BorderThickness="1,1,1,1"
                                    BorderBrush="#00614ad3"
                                    Background="#00614ad3"
                                    Name="border"
                                    SnapsToDevicePixels="True">

                                    <Grid  ShowGridLines="False">
                                        <Ellipse Name="outer" Width="13" Height="10" Stroke="{TemplateBinding Foreground}"/>
                                        <Ellipse Name="insider" Width="8" Height="6" Stroke="{TemplateBinding Foreground}"/>

                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="UIElement.IsMouseOver" Value="true">
                                        <Setter Property="Foreground" Value="#ff6768"/>
                                        <Setter TargetName="outer" Property="Width" Value="12"/>
                                        <Setter TargetName="outer" Property="Height" Value="12"/>
                                        <Setter TargetName="insider" Property="Width" Value="8"/>
                                        <Setter TargetName="insider" Property="Height" Value="8"/>
                                        <Setter TargetName="insider" Property="Fill" Value="#ff6768"/>

                                    </Trigger>
                                    <Trigger Property="ButtonBase.IsPressed" Value="true">
                                        <Setter Property="Foreground">
                                            <Setter.Value>
                                                <SolidColorBrush>#ca3e47</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ControlTemplate.Resources>


            <Grid
        Name="Bg"
        SnapsToDevicePixels="True">
                <Grid.RowDefinitions>
                    <RowDefinition
                MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                    <RowDefinition
                Height="1E-05*" />
                    <RowDefinition
                MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                </Grid.RowDefinitions>
                <Border
            BorderThickness="{TemplateBinding Border.BorderThickness}"
            BorderBrush="{TemplateBinding Border.BorderBrush}"
            Width="5"
            Background="#08ffc8"
            Grid.Row="1" />
                <RepeatButton
            Command="ScrollBar.LineUpCommand"
            Name="PART_LineUpButton"
            IsEnabled="{TemplateBinding UIElement.IsMouseOver}"
            Style="{StaticResource repeatButtontyle}">


                </RepeatButton>
                <Track
            IsDirectionReversed="True"
            Name="PART_Track"
            IsEnabled="{TemplateBinding UIElement.IsMouseOver}"
            Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                    Command="ScrollBar.PageUpCommand">
                            <RepeatButton.Style>
                                <Style
                            TargetType="RepeatButton">
                                    <Style.Resources>
                                        <ResourceDictionary />
                                    </Style.Resources>

                                    <Setter Property="Panel.Background">
                                        <Setter.Value>
                                            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="UIElement.Focusable" Value="True"/>
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="True"/>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate
                                        TargetType="RepeatButton">
                                                <Rectangle
                                            Fill="{TemplateBinding Panel.Background}"
                                            Width="5"
                                            Height="{TemplateBinding FrameworkElement.Height}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb >
                            <Thumb.Style>
                                <Style TargetType="Thumb">
                                    <Style.Resources>
                                        <ResourceDictionary />
                                    </Style.Resources>
                                    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True">

                                    </Setter>
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="True"/>

                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate
                                        TargetType="Thumb">
                                                <Grid>
                                                    <Ellipse Width="14" Height="14" Stroke="White" Fill="White" />
                                                    <Ellipse Name="thumbout" Width="13" Height="13" Stroke="#1ee3cf"/>
                                                    <Ellipse Name="thumbin" Width="8" Height="8" Stroke="#1ee3cf"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="thumbout" Property="Width" Value="14"/>
                                                        <Setter TargetName="thumbout" Property="Height" Value="14"/>
                                                        <Setter TargetName="thumbin" Property="Width" Value="11"/>
                                                        <Setter TargetName="thumbin" Property="Height" Value="11"/>

                                                    </Trigger>
                                                    <Trigger Property="IsDragging" Value="true">
                                                        <Setter TargetName="thumbout" Property="Stroke" Value="#fe5f55"/>
                                                        <Setter TargetName="thumbin" Property="Stroke" Value="#fe5f55"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>

                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                    Command="ScrollBar.PageDownCommand">
                            <RepeatButton.Style>
                                <Style
                            TargetType="RepeatButton">
                                    <Style.Resources>
                                        <ResourceDictionary />
                                    </Style.Resources>
                                    <Setter Property="Panel.Background">
                                        <Setter.Value>
                                            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="UIElement.Focusable" Value="True"/>
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="True"/>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate
                                        TargetType="RepeatButton">
                                                <Rectangle
                                            Fill="{TemplateBinding Panel.Background}"
                                            Width="{TemplateBinding FrameworkElement.Width}"
                                            Height="{TemplateBinding FrameworkElement.Height}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
            Command="ScrollBar.LineDownCommand"
            Name="PART_LineDownButton"
            IsEnabled="{TemplateBinding UIElement.IsMouseOver}"
            Grid.Row="2" Style="{StaticResource repeatButtontyle}">


                </RepeatButton>
            </Grid>
            <ControlTemplate.Triggers>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--滚动视窗模板-->
        <ControlTemplate x:Key="scrollViewerTemplate" TargetType="ScrollViewer" >
            <Grid Background="{TemplateBinding Panel.Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Rectangle
                            Grid.Column="1"
                            Grid.Row="1"
                            Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                <ScrollContentPresenter
                            Grid.Column="0"
                            Grid.Row="0"
                            Margin="{TemplateBinding Control.Padding}"
                            Content="{TemplateBinding ContentControl.Content}"
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                            CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
                <ScrollBar
                            Grid.Column="1"
                            Grid.Row="0"
                            Minimum="0"
                            Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                            ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                            Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                            Cursor="Arrow"
                            AutomationProperties.AutomationId="VerticalScrollBar" />
                <ScrollBar
                            Orientation="Horizontal"
                            Grid.Column="0"
                            Grid.Row="1"
                            Minimum="0"
                            Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                            ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                            Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                            Cursor="Arrow"
                            AutomationProperties.AutomationId="HorizontalScrollBar" />
            </Grid>
        </ControlTemplate>


        <!--提示框的模板-->
        <ControlTemplate x:Key="toolTipTemplate" TargetType="{x:Type ToolTip}">
            <Border  Background="#881ee3cf" CornerRadius="5" >
                <ContentPresenter Margin="10"/>
            </Border>
        </ControlTemplate>


        <!--字体样式-->
        <Style x:Key="fontShowStyle" TargetType="{x:Type Control}">
            <Setter Property="FontFamily" Value="Comic Sans MS,console,黑体"/>
            <Setter Property="Foreground" Value="#0d3f67"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <dateConvertor:HasItemsToBoolConvertor x:Key="hasToBool"/>

    </Window.Resources>

    <Grid ShowGridLines="false">


        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition/>
            <RowDefinition Height="58"/>
        </Grid.RowDefinitions>

        <Border Background="#1ee3cf" CornerRadius="5" Width="100" HorizontalAlignment="Left">
            <StackPanel Orientation="Horizontal" Margin="2">
                <!--<Image Source="/图标.ico" Stretch="Fill" Width="36" Height="36" Visibility="Collapsed"/>-->
                <Label Content="音乐播放器" Style="{DynamicResource ResourceKey=fontShowStyle}" 
                       FontSize="18" Foreground="White"/>
            </StackPanel>
        </Border>

        <Grid Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="180"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <!--分区-->
            <Grid Grid.Column="0" Width="180">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20*" />
                    <RowDefinition Height="80*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Button HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed">本地</Button>

                <!--播放列表-->


                <TreeView Grid.Row="1" Background="#dadada" Margin="4" >

                    <TreeView.Template>
                        <ControlTemplate TargetType="TreeView">
                            <Border Name="root" Background="{TemplateBinding Background}" 
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    CornerRadius="10">
                                <ItemsPresenter/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Control.IsEnabled" Value="false">
                                    <Setter TargetName="root" Property="Background" Value="#525252"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </TreeView.Template>
                    <!--<TreeView.Style>
                        <Style TargetType="TreeView">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Border Background="#dadada" 
                                                Width="{TemplateBinding Width}"
                                                Height="{TemplateBinding Height}"
                                                CornerRadius="5"
                                                Margin="{TemplateBinding Padding}">
                                            <ItemsPresenter/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ItemTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Border Background="#6b48ff" Width="{Binding Width}">
                                            
                                        </Border>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ItemContainerStyle">
                                <Setter.Value>
                                    <Style TargetType="TreeViewItem">

                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TreeView.Style>-->
                    <local:MyTreeViewItem Header="所有音乐"  >
                        <local:MyTreeViewItem Header="最爱" MouseDoubleClick="FavoriteItem_Click"/>
                        <local:MyTreeViewItem Header="歌手" MouseDoubleClick="ArtistItem_Click"/>
                        <local:MyTreeViewItem Header="类型" MouseDoubleClick="TypeItem_Click"/>
                    </local:MyTreeViewItem>
                </TreeView>

                <!---->
                
                <Border Grid.Row="2" Background="#dadada" Margin="4" Height="180" CornerRadius="5">
                    <Grid x:Name="songCurrentPanel" Grid.Row="2" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="100*"/>
                        </Grid.RowDefinitions>
                        <!--<localMyControl:DrawImagePanel x:Name="songFace" Width="50" Height="50"/>-->
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="100*"/>
                    </Grid.ColumnDefinitions>

                    <Image x:Name="currentSongImage" Source="Images/DiskImage.png" Width="90" Height="90" HorizontalAlignment="Left" Stretch="Fill" Margin="5,5,0,0" Grid.Column="0"/>


                    <StackPanel Grid.Column="1" Grid.Row="0">

                    </StackPanel>


                </Grid>

                <Grid Name="panel" Grid.Row="1" Margin="5">
                    <Grid.Resources>
                        <Style x:Key="fontShowStyle" TargetType="{x:Type Control}">
                            <Setter Property="FontFamily" Value="Comic Sans MS,console,黑体"/>
                            <Setter Property="Foreground" Value="#0d3f67"/>
                            <Setter Property="FontSize" Value="14"/>
                        </Style>
                        <Style x:Key="textBoxFont" TargetType="{x:Type TextBlock}">
                            <Setter Property="FontFamily" Value="Comic Sans MS,console,黑体"/>
                            <Setter Property="Foreground" Value="#0d3f67"/>
                            <Setter Property="FontSize" Value="10"/>
                            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" Margin="2,2,2,1"
                                        Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2">
                        <TextBlock Text="Title:" Style="{StaticResource textBoxFont}" Foreground="#ca3e47"/>
                        <TextBlock Name="currentSongTitle" Style="{StaticResource textBoxFont}" Width="130"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" 
                                        Grid.Column="0" Grid.Row="1" Margin="2,1,2,1">
                        <TextBlock Text="Artist:" Style="{StaticResource textBoxFont}" Foreground="#ca3e47"/>
                        <TextBlock x:Name="currentSongArtist" Style="{StaticResource textBoxFont}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"  Grid.Column="1" Grid.Row="2" Margin="2,1,2,2">
                        <TextBlock Text="Album:" Style="{StaticResource textBoxFont}" Foreground="#ca3e47"/>
                        <TextBlock x:Name="currentSongAlbum" Style="{StaticResource textBoxFont}"/>
                        <Label Content="Type:" Style="{StaticResource fontShowStyle }" Visibility="Collapsed"/>
                        <TextBlock x:Name="currentSongGenur"  Visibility="Collapsed" Style="{StaticResource textBoxFont}"/>
                    </StackPanel>
                </Grid>

            </Grid>

            </Border>

        </Grid>
        <!--内容区-->
        <!--<Grid Grid.Column="1" x:Name="contentShow">
                <Grid.Resources>
                    <dateConvertor:BitmapImageToILixtConvertor x:Key="ImageSourceConvertor"/>
                </Grid.Resources>-->

        <DockPanel Grid.Column="1">

            <DockPanel.Resources>
                <dateConvertor:BitmapImageToILixtConvertor x:Key="ImageSourceConvertor"/>


                <DataTemplate x:Key="mediaInfo" DataType="{x:Type local:MediaInfo}">
                    <Border Name="rootBorder" CornerRadius="5">
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Width="95" Height="95" CornerRadius="4,4,4,2" Background="#0d3f67" Margin="2.5"
                                            Padding="4">
                                <Image Name="Picture" Margin="2" 
                                           Source="{Binding PictureBytes, Converter={StaticResource ResourceKey=ImageSourceConvertor}}"/>
                            </Border>
                            <Border Width="92" Height="42" Margin="4,2,4,2" Background="#99f2f4f6" 
                                        CornerRadius="5" Grid.Row="1">
                                <TextBlock Grid.Row="1" 
                                               Name="songName"  
                                               FontFamily="Comic Sans MS,console,黑体" 
                                               FontSize="12"
                                               Text="{Binding Path=Title}"   
                                               FontWeight="Bold"
                                               TextWrapping="WrapWithOverflow"
                                               Margin="2"/>
                            </Border>
                            <Border Grid.Row="2" Width="92" Height="16" 
                                        Background="#99f2f4f6" Margin="4,2,4,2" CornerRadius="5">
                                <Grid  Width="80" Height="14"  >
                                    <!--<TextBlock Text="歌手:" FontSize="10" FontFamily="console"
                                                       FontStyle="Italic" TextAlignment="Center" Margin="2"
                                                       HorizontalAlignment="Center"/>-->
                                    <TextBlock Grid.Row="2" Margin="5,2,5,2"
                                                        Name="artist" TextAlignment="Center"
                                                        Text="{Binding Path=Artist}" 
                                                        TextWrapping="NoWrap"
                                                        FontSize="10" FontFamily="Comic Sans MS,console,黑体"
                                                       FontStyle="Italic"
                                                       Width="96" Height="12"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"/>
                                </Grid>
                            </Border>




                            <StackPanel HorizontalAlignment="Right" 
                                            VerticalAlignment="Top">
                                <Button Content="add" Height="10" Width="10" Name="addToPlayList"/>
                                <Button Content="love" Height="10" Width="10" Name="loveSong"/>
                                <Button Content="edit" Height="10" Width="10" Name="editSong"/>
                            </StackPanel>
                        </Grid>
                    </Border>

                </DataTemplate>
            </DockPanel.Resources>


            <Border DockPanel.Dock="Top" CornerRadius="5" Background="#f2f4f6" Margin="4,4,4,2" Height="24">

                <Border.Resources>
                    <Style TargetType="Button" x:Key="buttonStyle">
                        <Setter Property="Background" Value="#1ee3cf"/>
                        <Setter Property="Foreground" Value="#f2f4f6"/>
                        <Setter Property="Width" Value="20"/>
                        <Setter Property="Height" Value="20"/>
                        <Setter Property="Padding" Value="2"/>
                        <Setter Property="Margin" Value="2"/>
                    </Style>
                </Border.Resources>

                <StackPanel  Orientation="Horizontal">
                    <Button  x:Name="findMusic" Style="{StaticResource buttonStyle}" Click="FindSongOnClick">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Name="root" 
                                            CornerRadius="5"
                                            Background="{TemplateBinding Background}" 
                                            Width="{TemplateBinding Width}"
                                            Height="{TemplateBinding Height}">
                                    <Grid>
                                        <Polygon Name="poly" Points="5,5 5,15 15,15 15,7 9,7 7,5" 
                                                     Fill="{TemplateBinding Foreground}" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="poly" Property="Fill" Value="#ff502f"/>

                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Button.IsPressed" Value="false"/>
                                            <Condition Property="Button.IsMouseOver" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="root" Property="Button.Background" Value="#08ffc8"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                        <Button.ToolTip>
                            <ToolTip Content="打开音频文件夹" 
                                            Style="{DynamicResource fontShowStyle}"
                                            Template="{DynamicResource toolTipTemplate}"/>
                        </Button.ToolTip>
                    </Button>


                    <Button Name="addSong" Style="{StaticResource buttonStyle}" Click="AddSong_Click">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Name="root" 
                                            CornerRadius="5"
                                            Background="{TemplateBinding Background}" 
                                            Width="{TemplateBinding Width}"
                                            Height="{TemplateBinding Height}">
                                    <Grid>
                                        <Polygon Name="poly" Points="4,9 4,11 9,11 9,16 11,16 11,11 
                                                     16,11 16,9 11,9 11,4 9,4 9,9" 
                                                     Fill="{TemplateBinding Foreground}" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="poly" Property="Fill" Value="#ff502f"/>

                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Button.IsPressed" Value="false"/>
                                            <Condition Property="Button.IsMouseOver" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="root" Property="Button.Background" Value="#08ffc8"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>

                        <Button.ToolTip>
                            <ToolTip Content="增加音乐文件" 
                                            Style="{DynamicResource fontShowStyle}"
                                            Template="{DynamicResource toolTipTemplate}"/>
                        </Button.ToolTip>
                    </Button>
                </StackPanel>

            </Border>

            <ListBox x:Name="songList" SelectionChanged="SongSelectionChange" 
                         MouseDoubleClick="SongListItem_DoubleClick" 
                         ScrollViewer.VerticalScrollBarVisibility="Auto" 
                         HorizontalAlignment="Stretch" 
                         VerticalAlignment="Stretch"
                         Padding="10" Background="#0d3f67" ItemTemplate="{StaticResource mediaInfo}">

                <ListBox.Template>
                    <ControlTemplate>
                        <Border Name="rooBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                    Padding="5"  >
                            <ScrollViewer Width="{TemplateBinding Width}"
                                          HorizontalScrollBarVisibility="Disabled" >

                                <ItemsPresenter/>
                            </ScrollViewer>
                            <!--<Grid>
                                <ScrollBar Template="{StaticResource myScrollBar}" />
                            </Grid>-->
                            <!--<WrapPanel Width="{TemplateBinding Width}">
                                    <ItemsPresenter/>
                                </WrapPanel>-->
                        </Border>
                    </ControlTemplate>
                </ListBox.Template>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Background="#f2f4f6"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <!--修改listboxitem的外观-->
                <ListBox.ItemContainerStyle>
                    <!--利用setter改变template属性,产生新的外观-->
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Foreground" Value="#0d3f67"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border Name="rootBorder" Background="#1ee3cf" Margin="5"
                                                CornerRadius="5">
                                        <ContentPresenter/>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ListBoxItem.IsSelected" Value="true">
                                            <Setter TargetName="rootBorder" Property="Background" Value="#6b48ff"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="ListBoxItem.IsMouseOver" Value="true"/>
                                                <Condition Property="ListBoxItem.IsSelected" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="rootBorder" Property="Background" Value="#08ffc8"/>
                                            <Setter Property="ListBoxItem.Foreground" Value="#fe5f55"/>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>

        </DockPanel>
        <!--一个浮动在上方的查找歌曲的工具-->
        <Canvas Grid.Column="1">
            <Canvas.Resources>
                <dateConvertor:ToggleButtonCheckedVisibilityConvertor x:Key="ischeckedConvertor"/>
            </Canvas.Resources>


            <Grid Canvas.Left="80" LostFocus="SearchToolLostFocus">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="100*"/>
                    <ColumnDefinition Width="50"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <ToggleButton Name="toggle"  Grid.Column="0" Grid.Row="0"
                      FontSize="10">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Name="root"
                            Background="#08ffc8" 
                                Width="24" Height="24" 
                                CornerRadius="4"
                                Margin="2" Grid.Column="0">
                                <Canvas>
                                    <Polygon Name="cross" 
                                         Points="1,0 8,6 6,8 0,1"  
                                         Fill="{TemplateBinding Foreground}" 
                                     Canvas.Left="12" Canvas.Top="12"/>
                                    <Ellipse Name="ellipes" Width="12" Height="12" Stroke="Black" 
                                     Fill="white" Canvas.Left="4" Canvas.Top="4"/>
                                </Canvas>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="ellipes" Property="Fill" Value="#fff1ac"/>

                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="root" Property="Background" Value="#1ee3cf"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                    <ToggleButton.ToolTip>
                        <ToolTip Template="{StaticResource toolTipTemplate}" 
                                 Content="根据歌曲名称和艺术家名称查找"/>
                    </ToggleButton.ToolTip>
                </ToggleButton>
                <TextBox Width="300" Height="20" 
                 Grid.Column="1" Grid.Row="0"  TextAlignment="Right"
                 FontSize="12" Name="searchText" 
                         Visibility="{Binding ElementName=toggle, Path=IsChecked, 
                    Converter={StaticResource ischeckedConvertor}}"/>


                <Button Grid.Column="2" Grid.Row="0"
                Padding="4,2,4,2" Background="#08ffc8" 
                Name="searchButton"
                        Click="SearchButton_OnClick"
                         Visibility="{Binding ElementName=toggle, Path=IsChecked, 
                    Converter={StaticResource ischeckedConvertor}}">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Margin="{TemplateBinding Padding}"
                            CornerRadius="5" Name="okButton" >
                                <Grid>
                                    <ContentPresenter HorizontalAlignment="Center" 
                                                          VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>

                    OK
                </Button>
                <ScrollViewer Width="390" Height="280" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2"
                              VerticalScrollBarVisibility="Hidden" Visibility="{Binding ElementName=toggle, Path=IsChecked, 
                    Converter={StaticResource ischeckedConvertor}}">
                    <StackPanel Width="284" Height="auto" Background="#00000000" Name="ShowResaultpanel" Visibility="{Binding ElementName=toggle, Path=IsChecked, 
                    Converter={StaticResource ischeckedConvertor}}" />
                </ScrollViewer>
 
            </Grid>
        </Canvas>
        <!--</Grid>-->
    </Grid>

    <!--====================================================================================-->
    <!--====================================================================================-->


    <!--底部播放控制区-->
    <Border Grid.Row="2" Background="#f2f4f6" CornerRadius="10" Margin="4"/>
    <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="4">


        <StackPanel.Resources>
            <!--资源-->
            <dateConvertor:TimeSpanToDoubleConvertor x:Key="TimeDoubleConvetter"/>
            <dateConvertor:TimeSpanFormat x:Key="TimeSapnFormat"/>
            <dateConvertor:StringtoSecondConvertor x:Key="stringIntConvertor"/>


            <!--============================================================================-->
            <!--进度条的模板-->
            <ControlTemplate x:Key="silderTemplate" TargetType="{x:Type Slider}">
                <Border  Width="{TemplateBinding Width}" Height="42"
                             SnapsToDevicePixels="True">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <!--<Rectangle Grid.Row="1" Width="{TemplateBinding Width}" 
                                       Fill="#08ffc8" Height="2"/>-->

                        <!--重要 Track的namePART_Track 竟然影响到这个进度条能不能拖动-->
                        <Track 
                                Name="PART_Track"
                                Grid.Row="1">
                            <!--完成进度-->
                            <Track.DecreaseRepeatButton>
                                <RepeatButton OverridesDefaultStyle="True"
                                                  Focusable="False"
                                                  KeyboardNavigation.IsTabStop="False">
                                    <RepeatButton.Command>
                                        <RoutedCommand/>
                                    </RepeatButton.Command>
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Rectangle Width="{TemplateBinding Width}" 
                                                                        Height="2" Fill="#ff585d"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb OverridesDefaultStyle="True"
                                           Focusable="False">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border Background="#00000000" Width="14" Height="14">
                                                <Grid>
                                                    <Ellipse Width="14" Height="14" Fill="White"
                                                                 HorizontalAlignment="Center"
                                                                 VerticalAlignment="Center"
                                                                 StrokeThickness="1"/>
                                                    <Ellipse Name="outside" Width="10" Height="10" Stroke="#1ee3cf" 
                                                                 HorizontalAlignment="Center"
                                                                 VerticalAlignment="Center"
                                                                 StrokeThickness="1"/>

                                                    <Ellipse Name="inside" Grid.Column="1" Grid.Row="1" 
                                                                 Stroke="#1ee3cf" 
                                                                 HorizontalAlignment="Center"
                                                                 VerticalAlignment="Center"
                                                                 Width="6" Height="6"
                                                                 Canvas.Left="2" Canvas.Top="2"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>

                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="true"/>
                                                        <Condition Property="IsDragging" Value="false"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter TargetName="outside" Property="Width" Value="12"/>
                                                    <Setter TargetName="outside" Property="Height" Value="12"/>
                                                    <Setter TargetName="inside" Property="Width" Value="8"/>
                                                    <Setter TargetName="inside" Property="Height" Value="8"/>
                                                </MultiTrigger>

                                                <Trigger Property="IsDragging" Value="true">
                                                    <Setter TargetName="outside" Property="Width" Value="12"/>
                                                    <Setter TargetName="outside" Property="Height" Value="12"/>
                                                    <Setter TargetName="inside" Property="Width" Value="8"/>
                                                    <Setter TargetName="inside" Property="Height" Value="8"/>
                                                    <Setter TargetName="outside" Property="Stroke" Value="#6b48ff"/>
                                                    <Setter TargetName="inside" Property="Stroke" Value="#6b48ff"/>
                                                    <Setter TargetName="inside" Property="Fill" Value="#6b48ff"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton OverridesDefaultStyle="True"
                                                  KeyboardNavigation.IsTabStop="False"
                                                  Focusable="False">
                                    <RepeatButton.Command>
                                        <RoutedCommand/>
                                    </RepeatButton.Command>
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Rectangle Width="{TemplateBinding Width}" 
                                                           Height="2" Fill="#08ffc8"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>

                </Border>

            </ControlTemplate>
        </StackPanel.Resources>



        <!--音频播放器-->
        <MediaElement x:Name="audio" Visibility="Collapsed" MediaOpened="Audio_MediaOpened"/>
        <!--控制按钮-->
        <local:StarStopButton Content="prev" x:Name="previous" Click="Previous_Click" Width="35" Height="35" Margin="2"
                                  IsStartStopButton="False" IsNext="False"/>
        <local:StarStopButton x:Name="startAndPause" Width="40" Height="40" Click="StartPaulse_Click"                                       IsStartStopButton="True" IsPlaying="{Binding ElementName=myWin, Path=IsAudioPlay}"
                                  Padding="2"/>
        <!--<local:StarStopButton x:Name="startStop" IsStartStopButton="True" Width="40" Height="40" IsPlaying="{Binding ElementName=myWin, Path=IsAudioPlay}"/>-->

        <local:StarStopButton Content="next" x:Name="next" Click="Next_Click" Width="35" Height="35" 
                                  IsStartStopButton="False" IsNext="True"/>

        <TextBlock x:Name="currentPosition"/>
        <Label Name="currentTimeLabel" Width="45" VerticalAlignment="Center"
                   Content="{Binding Path=Position, Converter={StaticResource TimeSapnFormat}}"
                   FontFamily="console,黑体"/>

        <Slider x:Name="timeLineSplier" Width="200" VerticalAlignment="Center"
                    Value="{Binding Path=Position, Converter={StaticResource TimeDoubleConvetter}, Mode=TwoWay}"
                    Template="{StaticResource silderTemplate}" IsEnabled="False"/>

        <TextBlock x:Name="totalTime"/>
        <Label Name="totlaTimeLabel" Content="00:00" Width="45" 
                   VerticalAlignment="Center" FontFamily="console,黑体"/>
        <!--<Button Content="{Binding ElementName=timeLineSplier, Path=Value}" Click="Button_Click"/>-->


        <!--最爱,随机,循环,单曲循环按钮-->
        <local:SongToggerButton  Content="love" x:Name="loveMusic" Checked="SetUnsetFavorite_Click">
            <local:SongToggerButton.ToolTip>
                <ToolTip Content="喜爱" 
                             Style="{StaticResource fontShowStyle}"
                             Template="{StaticResource toolTipTemplate}"/>
            </local:SongToggerButton.ToolTip>
        </local:SongToggerButton>


        <local:SongToggerButton ButtonFunction="3" IsChecked="{Binding ElementName=myWin, Path=IsRecycle, Mode=TwoWay}" Content="recycle all" >
            <local:SongToggerButton.ToolTip>
                <ToolTip Content="全部循环" 
                             Style="{StaticResource fontShowStyle}"
                             Template="{StaticResource toolTipTemplate}"/>
            </local:SongToggerButton.ToolTip>
        </local:SongToggerButton>

        <local:SongToggerButton ButtonFunction="4" IsChecked="{Binding ElementName=myWin, Path=SingleRecycle, Mode=TwoWay}"  Content="singleRecycle">
            <local:SongToggerButton.ToolTip>
                <ToolTip Content="单曲循环" 
                             Style="{StaticResource fontShowStyle}"
                             Template="{StaticResource toolTipTemplate}"/>
            </local:SongToggerButton.ToolTip>
        </local:SongToggerButton>

        <local:SongToggerButton ButtonFunction="2" IsChecked="{Binding ElementName=myWin, Path=IsRandom, Mode=TwoWay}" Content="random">
            <local:SongToggerButton.ToolTip>
                <ToolTip Content="随机" FontFamily="Comic Sans MS,console,黑体" 
                             Foreground="#0d3f67"
                             Template="{StaticResource toolTipTemplate}">
                </ToolTip>
            </local:SongToggerButton.ToolTip>
        </local:SongToggerButton>
        <Label  Content="volum"/>
        <Slider x:Name="volum" Minimum="0" Maximum="1" Value="0.5" Width="100"
                    ValueChanged="VolumChangeEvent" Template="{StaticResource silderTemplate}"/>
    </StackPanel>


    <!--初次登录用来提示的面板-->
    <Grid Grid.RowSpan="3" Name="firstTimeTipe" Visibility="Collapsed">
        <Border Background="#66dadada"
                Width="{Binding ElementName=myWin, Path=ActualWidth}"
                Height="{Binding ElementName=myWin, Path=ActualHeight}">
            <Canvas>
                <Grid Canvas.Left="210" Canvas.Top="70">
                    <Polygon Points="5,0 50,45 45,50 0,5" Fill="#614ad3" />
                    <Polygon Points="0,0 20,0 0,20" Fill="#614ad3" />
                </Grid>
                <TextBlock Text="初次打开请导入音频文件夹或者音频文件" Canvas.Left="200" Canvas.Top="120" 
                           FontSize="20" Foreground="#e42c64" FontFamily="Console"/>
                <Button Width="50" Height="25" Canvas.Left="500" Canvas.Top="150"
                        Click="IKnow_OnClick">
                    <Button.Template>
                        <ControlTemplate>
                            <Border Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    BorderBrush="#614ad3" >
                                <TextBlock Name="textblock" Text="OK" 
                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                           FontSize="20"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsMouseOver" Value="true">
                                    <Setter TargetName="textblock" Property="FontSize" Value="22"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    知道了
                </Button>
            </Canvas>
        </Border>
    </Grid>
    </Grid>

</Window>
